extends ../relayout.pug

block content
  div(class="container" )
    label(for="category" style="display:inline-block;margin-right:5px") Category
    select(data-bind="value:filter" id="category")
      option(value="all") All
      option(value="General") General
      option(value="Agility") Agility
      option(value="Passing") Passing
      option(value="Strength") Strength
      option(value="Mutation") Mutation
      option(value="Extraordinary") Extraordinary

    table(class="table table-striped")
      tbody
        // ko foreach: skills()
        tr
          td
            span(data-bind="text: name")
          td
            img(data-bind="attr:{src:`https://cdn2.rebbl.net/images/skills/${name.replace(/ |&/g,'')}.png`}" alt="" title="" )
          td(data-bind="text: description")
        // /ko

block scripts
  - if (process.env.NODE_ENV === 'production')
    script(src="https://cdn2.rebbl.net/scripts/knockout-3.4.2.js")
    script(src="https://cdn2.rebbl.net/scripts/knockout-mapping.min.js")
    script(src="https://cdn2.rebbl.net/scripts/knockout-es5.js")
  - else
    script(src="/scripts/knockout-3.4.2.js")
    script(src="/scripts/knockout-mapping.min.js")
    script(src="/scripts/knockout-es5.js")

  script.
    async function loadSkillDescriptions(){
      let result = await fetch("/api/v2/bloodbowl/skillDescriptions");
      model.skillDescriptions  = await result.json()
    }

    class ViewModel{
      constructor(){
        this.skillDescriptions = [];
        this.filter = "all";
        ko.track(this);
      }

      skills(){
        return this.filter !== "all" ? this.skillDescriptions.filter(x => x.category === this.filter) : this.skillDescriptions;
      }
    }

    let model = new ViewModel({});
    ko.applyBindings(model);
    $(document).ready(function(){
      loadSkillDescriptions();
    });