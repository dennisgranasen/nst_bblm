extends ../relayout.pug

block content
  div(class="Background u-bottomPadding--large u-topPadding--medium")
    div(class="/*TexturedBackground TexturedBackground--light-primary*/")
      div(class="container navcontainer" style="display:flex;flex-flow:wrap" data-index="0")
        div(class="row col-12")
          div(class="col-6 offset-3 text-center")
            select(data-bind="options:races.sort((a,b) => a.name > b.name ? 1 : -1), optionsValue:'id', optionsText:'name', optionsCaption:'Select Race', value:selectedRace")
        // ko foreach: filteredStarplayers()
        div(class="card" style="min-width:18rem;width: 33%;")
          h5(class="card-text text-center" style="color: rgb(24, 119, 162);margin-bottom:5px;" data-bind="text: type.replace('StarPlayer_','').replace(/([A-Z])/g, ' $1').replace('I I I','III')")
          h6(data-bind="text:(cost+'').replace('000','')+'k'" class="card-text text-center" style="margin-top:5px")
          div(class="card-body")
            div(class="row col-12")
              div(class="col-3") Mv
              div(class="col-3") St
              div(class="col-3") Ag
              div(class="col-3") Av
            div(class="row col-12")
              div(class="col-3" data-bind="text: ma")
              div(class="col-3" data-bind="text: st")
              div(class="col-3" data-bind="text: ag")
              div(class="col-3" data-bind="text: av")
            div(class="row col-12")
              //ko foreach: $root.getSkills($data)
              img(data-bind="attr:{src:`https://cdn.rebbl.net/images/skills/${$data}.png`,title:$data.replace(/([A-Z])/g, ' $1').trim()},click:$root.selectSkill.bind($data,$root) "  alt=""  data-toggle="modal" data-target="#skill-dialog" style="border-radius: 8px;" )
              // /ko
        // /ko
  div(class="modal" tabindex="-1" role="dialog" id="skill-dialog")
    // ko if: activeSkill
    div(class="modal-dialog modal-lg modal-dialog-centered" role="document")
      div(class="modal-content")
        div(class="modal-header")
          h5(class="modal-title" data-bind="text: activeSkill.name")
        div(class="modal-body")
          img( data-bind="attr:{src:`https://cdn.rebbl.net/images/skills/${activeSkill.name.replace(/[ \-']/g,'')}.png`}" alt="" style=" float: left;margin-right:20px;width:145px;margin-top:20px")
          p(data-bind="text:activeSkill.description")
        div(class="modal-footer")
          button( type="button" class="btn btn-secondary" data-dismiss="modal") Close
    // /ko



block scripts
  - if (process.env.NODE_ENV === 'production')
    script(src="https://cdn.rebbl.net/scripts/knockout-3.4.2.js")
    script(src="https://cdn.rebbl.net/scripts/knockout-mapping.min.js")
    script(src="https://cdn.rebbl.net/scripts/knockout-es5.js")
  - else
    script(src="/scripts/knockout-3.4.2.js")
    script(src="/scripts/knockout-mapping.min.js")
    script(src="/scripts/knockout-es5.js")

  script.
    const SKILLS = "skills.v3";
    const SKILLDESCRIPTIONS = "skillDescriptions.v2";
    function loadSkillDescriptions(){
      const storage = window.localStorage;
      let skills = null;
  
      if (storage)    
        skills = localStorage.getItem(SKILLDESCRIPTIONS);

      if(!skills){
        let xhr = new XMLHttpRequest();
        let path = window.location.pathname.split('/');

        xhr.open("GET", "/api/v2/bloodbowl/skillDescriptions"  ,true)
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.responseType = 'json';

        xhr.onload  = function() {//Call a function when the state changes.
          model.skillDescriptions =xhr.response;
          const storage = window.localStorage;
      
          if (storage)
            storage.setItem(SKILLDESCRIPTIONS, JSON.stringify(xhr.response));    
          loadSkills();
        }

        xhr.send();
      } else {
        model.skillDescriptions = JSON.parse(skills);
        loadSkills();
      }
    }

    function loadSkills(){
      const storage = window.localStorage;
      let skills = null;
  
      if (storage)    
        skills = localStorage.getItem(SKILLS);

      if(!skills){
        let xhr = new XMLHttpRequest();
        let path = window.location.pathname.split('/');

        xhr.open("GET", "/api/v2/bloodbowl/skills"  ,true)
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.responseType = 'json';

        xhr.onload  = function() {//Call a function when the state changes.
          model.skills =xhr.response;
          const storage = window.localStorage;
      
          if (storage)
            storage.setItem(SKILLS, JSON.stringify(xhr.response));    
          
          loadRaces();
        }

        xhr.send();
      } else {
        model.skills = JSON.parse(skills);
        loadRaces();
      }
    }

    function loadRaces(){
      const storage = window.localStorage;
      let races = null;
  
      if (storage)    
        races = localStorage.getItem('races');

      if(!races){
        let xhr = new XMLHttpRequest();
        let path = window.location.pathname.split('/');

        xhr.open("GET", "/api/v2/bloodbowl/races"  ,true)
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.responseType = 'json';

        xhr.onload  = function() {//Call a function when the state changes.
          model.races =xhr.response;
          const storage = window.localStorage;
      
          if (storage)
            storage.setItem('races', JSON.stringify(xhr.response));    
          
          loadStarPlayers();
        }

        xhr.send();
      } else {
        model.races = JSON.parse(races);
        loadStarPlayers();
      }
    }

    function loadStarPlayers(){
      const storage = window.localStorage;
      let starplayers = null;
  
      if (storage)    
        starplayers = localStorage.getItem('starplayers.v1');

      if(!starplayers){
        let xhr = new XMLHttpRequest();
        let path = window.location.pathname.split('/');

        xhr.open("GET", "/api/v2/bloodbowl/starplayers"  ,true)
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.responseType = 'json';

        xhr.onload  = function() {//Call a function when the state changes.
          model.starplayers =xhr.response.filter(x => x.type.indexOf("Fallback")=== -1);
          const storage = window.localStorage;
      
          if (storage)
            storage.setItem('starplayers.v1', JSON.stringify(xhr.response));    
        }

        xhr.send();
      } else {
        model.starplayers = JSON.parse(starplayers).filter(x => x.type.indexOf("Fallback")=== -1);
      }
    }

    class ViewModel{
      constructor(){
        this.skills = [];
        this.skillDescriptions = [];
        this.starplayers = [];
        this.races = [];
        this.activeSkill = false;
        this.selectedRace = false;
        ko.track(this);
      }

      selectSkill(self,e){
        self.activeSkill = self.skillDescriptions.find(skill => skill.name.toLowerCase() === e.replace(/([A-Z])/g, ' $1').trim().toLowerCase());
      };

      getSkills(player) {return this.skills[player.type]};

      filteredStarplayers(){ 
        if (this.selectedRace)
          return this.starplayers.filter(p => p.races.indexOf(this.selectedRace) > -1).sort((a,b) => a.type > b.type ? 1 : -1)

        return this.starplayers.sort((a,b) => a.type > b.type ? 1 : -1)
      }
    }

    let model = new ViewModel({});
    ko.applyBindings(model);
    $(document).ready(function(){

      loadSkillDescriptions();
    });